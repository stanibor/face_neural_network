stages:
  download:
    cmd: curl ${dataset.download.url} -o ../data/datasets/${dataset.download.file}.zip
    params:
      - dataset.download
    outs:
      - ../data/datasets/${dataset.download.file}.zip
  unpack:
    cmd: unzip ../data/datasets/${dataset.download.file} -d ../data/datasets/faces > ../data/datasets/log.txt &&
      ls -l ../data/datasets/faces > ../data/datasets/faces/unpacked_log.txt
    params:
      - dataset.download.file
    deps:
      - ../data/datasets/${dataset.download.file}.zip
    outs:
      - ../data/datasets/faces/unpacked_log.txt
      - ../data/datasets/log.txt
  organize:
    cmd: python process_dataset.py organize --directory=../data/datasets/faces
    deps:
      - process_dataset.py
      - ../facer/datasets/processor.py
      - ../data/datasets/faces/unpacked_log.txt
    outs:
      - ../data/datasets/faces/images
      - ../data/datasets/faces/masks
      - ../data/datasets/faces/landmarks
  crop_and_split:
    cmd: python process_dataset.py crop_and_split
      --directory=../data/datasets/faces
      --crop_width=${dataset.transform.crop.max}
      --output=../data/datasets/cropped
      --test=${dataset.test.name}/raw
      --split=${dataset.test.split}
      --seed=${dataset.test.seed}
    params:
      - dataset.transform.crop
    deps:
      - process_dataset.py
      - ../facer/datasets/processor.py
      - ../data/datasets/faces/images
      - ../data/datasets/faces/masks
      - ../data/datasets/faces/landmarks
    outs:
      - ../data/datasets/cropped/images
      - ../data/datasets/cropped/masks
      - ../data/datasets/cropped/landmarks
      - ../data/datasets/${dataset.test.name}/raw/images
      - ../data/datasets/${dataset.test.name}/raw/masks
      - ../data/datasets/${dataset.test.name}/raw/landmarks
  transform_test_dataset:
    cmd: python process_dataset.py transform
      --directory=../data/datasets/${dataset.test.name}/raw
      --output=../data/datasets/${dataset.test.name}
      --transform_json=transforms/transform.json
    deps:
      - process_dataset.py
      - transforms/transform.json
      - ../facer/datasets/processor.py
      - ../data/datasets/${dataset.test.name}/raw/images
      - ../data/datasets/${dataset.test.name}/raw/masks
      - ../data/datasets/${dataset.test.name}/raw/landmarks
    outs:
      - ../data/datasets/${dataset.test.name}/images
      - ../data/datasets/${dataset.test.name}/masks
      - ../data/datasets/${dataset.test.name}/landmarks
  make_binary_masks:
    foreach:
      - dataset: ../data/datasets/${dataset.directory}
      - dataset: ../data/datasets/${dataset.test.name}
    do:
      cmd: python process_dataset.py binary_masks
          --directory=${item.dataset}
      deps:
        - process_dataset.py
        - ../facer/datasets/processor.py
        - ${item.dataset}/masks
      outs:
        - ${item.dataset}/bin_masks
  make_transform_json:
    cmd: python make_transform_jsons.py 
      --crop_min_max=${dataset.transform.crop.min},${dataset.transform.crop.max}
      --output_size=${dataset.transform.resize}
      --output=transforms/transform.json
      --photometric_json=transforms/photometric.json
    params:
      - dataset.transform
    deps:
      - make_transform_jsons.py
      - ../facer/datasets/transforms.py
      - transforms/photometric.json
    outs:
      - transforms/transform.json
